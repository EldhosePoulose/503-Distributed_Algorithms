package server;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.time.LocalTime;
import global.berkeleyParams;

public class clockServerImplementation extends UnicastRemoteObject implements TimeServer {
	
	private LocalTime time;
	public clockServerImplementation(LocalTime time) throws RemoteException {
		this.time = time; // fetch the time
	}
	
	@Override
	public LocalTime getTime() throws RemoteException {
		return time;

	@Override
	public void adjustTime(LocalTime slaveTime, long delta) throws RemoteException {
		long localTime = slaveTime.toSecondOfDay(); // fetch the time from slaves in seconds
		long serverTime = this.getTime().toSecondOfDay(); 
		var deltaTime = serverTime - localTime;
		newDelta = newDelta * -1 + delta + serverTime;
		LocalTime updatedClock = LocalTime.ofSecondOfDay(newDelta);
		System.out.println("Updated Time is: " + berkeleyParams.formatter.format(updatedClock));
		this.time = updatedClock;
	}		
		
}